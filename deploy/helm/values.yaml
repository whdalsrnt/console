###############################
# DEFAULT 
###############################
enabled: true
developer: false
name: console
replicas: 1
image:
    name: spaceone/console
    version: latest
imagePullPolicy: IfNotPresent

# For production.json (nodejs)
# console_api: https://console-api.console.spaceone.dev
# Domain name of console-api (usually ALB of console-api)
production_json:
    CONSOLE_API:
        ENDPOINT: "<console-api endpoint>"
    GTAG_ID: "<google analytics - tag id>"
    DOMAIN_NAME:
    DOMAIN_NAME_REF: hostname
    REPORT:
        DEFAULT_TEMPLATE_ID: template_2
    AMCHARTS_LICENSE:
        CHARTS: ''
        MAPS: ''
        TIMELINE: ''
    MOCK:
        ALL: false
        ENDPOINT: ''
    ASSET_PATH: {}
    DOMAIN_IMAGE: {}
    DOCS:
    - label: User Guide
      link: https://spaceone-dev.gitbook.io/user-guide
    - label: API Guide
      link: https://spaceone-dev.gitbook.io/spaceone-apis
    - label: GitHub
      link: https://github.com/spaceone-dev


#console_api: https://console-api

#domainName:
#    ref: config
#    name: root

# local sidecar
##########################
#sidecar:


##########################
# Local volumes
##########################
volumes:
    - name: timezone
      hostPath:
          path: /usr/share/zoneinfo/Asia/Seoul
    - name: log-volume
      emptyDir: {}

#######################
# global variable
#######################
global:
    shared: {}
    frontend:
      sidecar: []
#        - name: mongos
#          image: mongo:4.4.0-bionic
#          command: [ 'mongos', '--config', '/mnt/mongos.yml', '--bind_ip_all' ]
#          volumeMounts:
#            - name: mongos-conf
#              mountPath: /mnt/mongos.yml
#              subPath: mongos.yml
#              readOnly: true
#            - name: mongo-shard-key
#              mountPath: /opt/mongos/mongo-shard.pem
#              subPath: mongo-shard.pem
#              readOnly: true
#
      volumes: []
#        - name: mongo-shard-key
#          secret:
#              defaultMode: 0400
#              secretName: mongo-shard-key
#        - name: mongos-conf
#          configMap:
#              name: mongos-conf
#        - name: shared-conf
#          configMap:
#              name: shared-conf

    
# Service
service:
    type: NodePort
    annotations:
        nil: nil
    ports:
        - name: http
          port: 80
          targetPort: 80
          protocol: TCP
        - name: https
          port: 443
          targetPort: 80
          protocol: TCP

# Ingress
ingress:
  enabled: false
  host: '*.console'   # host for ingress (ex. *.console.spaceone.dev)
  annotations:
      kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
      alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
      alb.ingress.kubernetes.io/inbound-cidrs: 0.0.0.0/0 # replace or leave out
      alb.ingress.kubernetes.io/scheme: "internet-facing" # internet-facing
      alb.ingress.kubernetes.io/target-type: instance # Your console and console-api should be NodePort for this configuration.
      alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:... # This should be replaced with your cert arn.

